/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolapp.Expense;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.ResultSetMetaData;
import com.mysql.jdbc.Statement;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import schoolapp.utilities.Utility;

/**
 *
 * @author prohit
 */
public class AddExpense extends javax.swing.JFrame {

    private int EXPENSE_TYPE = 1;
    private Vector<Object> comboItems;
    private Connection connection;
    private Statement stmt;
    private ResultSet rs;
    private Connection connect;
    private PreparedStatement preparedStatement;

    /**
     * Creates new form NewJFrame
     */
    public AddExpense() {
        initComponents();
  //      Utility.updateFrameTitle(this);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddExpense = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        expenseTypeCombo = new javax.swing.JComboBox();
        expenseDateChooser = new com.toedter.calendar.JDateChooser();
        submitBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        amountTextBox = new javax.swing.JTextField();
        populateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        lblAddExpense.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAddExpense.setText("Add Expense ");

        jLabel1.setText("Expense Type");

        jLabel2.setText("Expense Date");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Amount");

        expenseTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expenseTypeComboActionPerformed(evt);
            }
        });

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Bill No and Description ");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        amountTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTextBoxActionPerformed(evt);
            }
        });

        populateBtn.setText("Populate");
        populateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(lblAddExpense))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(populateBtn)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(90, 90, 90)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(59, 59, 59)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(expenseTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(expenseDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40))
                                .addComponent(amountTextBox)))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddExpense)
                .addGap(4, 4, 4)
                .addComponent(populateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(expenseTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(expenseDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(44, 44, 44)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(amountTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearBtn)
                    .addComponent(submitBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void expenseTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expenseTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expenseTypeComboActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        if (amountTextBox.getText().isEmpty() && expenseDateChooser.getDate() == null) {
            Utility.showError(this, "Please fill date and amount fields!");
            return;
        } else if (amountTextBox.getText().isEmpty()) {
            Utility.showError(this, "Please fill Amount field!");
            return;
        } else if (expenseDateChooser.getDate() == null) {
            Utility.showError(this, "Please add Date of the Expense!");
            return;
        } else if (descriptionTextArea.getText().isEmpty()) {
            Utility.showError(this, "Please add Description!");
            return;
        } else if (expenseTypeCombo.getSelectedIndex() == -1) {
            Utility.showError(this, "No expense category defined. Please add expense type.");
            return;
        }
        double amount = 0.0;
        try {
            amount = Double.parseDouble(amountTextBox.getText());
        } catch (NumberFormatException ex) {
            Utility.showError(this, "Amount entered is not proper. It should be only numerals");
            return;
        }
        try {
            // Setup the connection with the DB
            connect = Utility.getConnection();
            // Statements allow to issue SQL queries to the database

            // PreparedStatements can use variables and are more efficient
            preparedStatement = connect.prepareStatement("insert into  expense (id,name,description,amount,date) values (default, ?, ?, ?, ?);");
            // "myuser, webpage, datum, summery, COMMENTS from feedback.comments");
            // Parameters start with 1
            preparedStatement.setString(1, expenseTypeCombo.getSelectedItem().toString());
            preparedStatement.setString(2, descriptionTextArea.getText());
            preparedStatement.setDouble(3, Double.parseDouble(amountTextBox.getText()));
            preparedStatement.setDate(4, new java.sql.Date(expenseDateChooser.getDate().getTime()));
            int rowCount = preparedStatement.executeUpdate();

            if (rowCount == 0) {
                Utility.showError(this, "Failed to create new Expense.");
                Utility.closeStatement(this, preparedStatement, connect);

                return;
            }
            Utility.showSuccess(this, "New Expense Added!");
            clearForm();
        } catch (ClassNotFoundException | SQLException ex) {
            Utility.showError(this, ex.getMessage());

        }

        Utility.closeStatement(this, preparedStatement, connect);

    }//GEN-LAST:event_submitBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearForm();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void amountTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTextBoxActionPerformed

    private void populateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateBtnActionPerformed
         amountTextBox.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c != '.')) {
                    e.consume();  // ignore event
                }
            }
        });

        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        //  Connect to an MySQL Database, run query, get result set

        String sql = "SELECT * FROM expense_type ;";

        try {
            connection = Utility.getConnection();
            stmt = (Statement) connection.createStatement();
            rs = stmt.executeQuery(sql);

            ResultSetMetaData md = (ResultSetMetaData) rs.getMetaData();
            int columns = md.getColumnCount();

            //  Get column names
            for (int i = 1; i <= columns; i++) {
                columnNames.add(md.getColumnName(i));
            }

            comboItems = new Vector<Object>();
            //  Get row data
            while (rs.next()) {
                comboItems.add(rs.getString(EXPENSE_TYPE));
            }

        } catch (SQLException | ClassNotFoundException ex) {
            Utility.showError(this, ex.getMessage());
        }

        DefaultComboBoxModel model = new DefaultComboBoxModel(comboItems);
        expenseTypeCombo.setModel(model);
        Utility.closeConnections(this, connection, stmt, rs);
    }//GEN-LAST:event_populateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountTextBox;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextArea descriptionTextArea;
    private com.toedter.calendar.JDateChooser expenseDateChooser;
    private javax.swing.JComboBox expenseTypeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddExpense;
    private javax.swing.JButton populateBtn;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        amountTextBox.setText("");
        descriptionTextArea.setText("");
        expenseDateChooser.setDate(null);
    }
}
