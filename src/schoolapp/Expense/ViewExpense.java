/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolapp.Expense;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.ResultSetMetaData;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import schoolapp.utilities.Utility;

/**
 *
 * @author prohit
 */
public class ViewExpense extends javax.swing.JFrame {
    
    private Vector<Object> comboItems;
    private int EXPENSE_TYPE = 1;
    private int SUM = 1;
    private Connection connection;
    private Statement stmt;
    private ResultSet rs;
    private ResultSet searchResult;

    /**
     * Creates new form ViewExpense
     */
    public ViewExpense() {
        initComponents();
        Utility.updateFrameTitle(this);
        
        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        //  Connect to an MySQL Database, run query, get result set

        String sql = "SELECT * FROM expense_type ;";
        
        try {
            connection = Utility.getConnection();
            stmt = (Statement) connection.createStatement();
            rs = stmt.executeQuery(sql);
            ResultSetMetaData md = (ResultSetMetaData) rs.getMetaData();
            int columns = md.getColumnCount();

            //  Get column names
            for (int i = 1; i <= columns; i++) {
                columnNames.add(md.getColumnName(i));
            }
            
            comboItems = new Vector<Object>();
            //  Get row data
            while (rs.next()) {
                comboItems.add(rs.getString(EXPENSE_TYPE));
                
            }
            comboItems.add("ALL");
            
        } catch (SQLException | ClassNotFoundException e) {
            Utility.showError(this, e.toString());
        }
        Utility.closeConnections(this, connection, stmt, rs);
        DefaultComboBoxModel model = new DefaultComboBoxModel(comboItems);
        expenseTypeCombo.setModel(model);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenseTable = new javax.swing.JTable();
        startDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        endDate = new com.toedter.calendar.JDateChooser();
        viewBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        expenseTypeCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Expenses");

        jLabel2.setText("Start Date");

        expenseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Expense ID", "Type", "Description", "Amount", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        expenseTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        expenseTable.setFocusable(false);
        expenseTable.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(expenseTable);
        expenseTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        jLabel3.setText("End date");

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Expense Type");

        expenseTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Uniform", "Employee Salary", "MISC", "ALL" }));
        expenseTypeCombo.setMaximumSize(new java.awt.Dimension(30, 32767));
        expenseTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expenseTypeComboActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total");

        totalAmount.setForeground(new java.awt.Color(255, 51, 0));
        totalAmount.setText("0.0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(172, 172, 172)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(265, 265, 265)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(expenseTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expenseTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewBtn))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalAmount))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        if (startDate.getDate() == null || endDate.getDate() == null) {
            Utility.showError(this, "Select the start and end dates!");
            return;
        }
        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        //  Connect to an MySQL Database, run query, get result set
        String searchSql = "SELECT id AS ID, name AS NAME, description AS DESCRIPTION,amount AS AMOUNT, date AS DATE FROM expense where date>='" + new java.sql.Date(startDate.getDate().getTime()) + "' and date<='" + new java.sql.Date(endDate.getDate().getTime()) + "' and name = '" + expenseTypeCombo.getSelectedItem().toString() + "';";
        if (expenseTypeCombo.getSelectedItem().toString().equalsIgnoreCase("all")) {
            searchSql = "SELECT id AS ID, name AS NAME, description AS DESCRIPTION,amount AS AMOUNT, date AS DATE FROM expense where date>='" + new java.sql.Date(startDate.getDate().getTime()) + "' and date<='" + new java.sql.Date(endDate.getDate().getTime()) + " ';";
        }
        
        try {
            connection = Utility.getConnection();
            stmt = (Statement) connection.createStatement();
            searchResult = stmt.executeQuery(searchSql);
            ResultSetMetaData md = (ResultSetMetaData) searchResult.getMetaData();
            int columns = md.getColumnCount();

            //  Get column names
            for (int i = 1; i <= columns; i++) {
                columnNames.add(md.getColumnName(i).toUpperCase());
            }
            
            boolean empty = true;
            double total = 0.0;
            int AMOUNT = 4;
            while (searchResult.next()) {
                empty = false;
                
                total = total + searchResult.getDouble(AMOUNT);
                
                Vector<Object> row = new Vector<Object>(columns);
                
                for (int i = 1; i <= columns; i++) {
                    row.addElement(searchResult.getObject(i));
                }
                
                data.add(row);
            }
            
            if (empty) {
                Utility.showError(this, "No expenses found with the given search criteria");
                totalAmount.setText("0.0");
            }
            
            totalAmount.setText(Double.toString(total));
            
        } catch (SQLException | ClassNotFoundException e) {
            Utility.showError(this, e.toString());
        }
        Utility.closeConnections(this, connection, stmt, searchResult);
        
        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        
        expenseTable.setModel(model);
        expenseTable.setEnabled(false);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void expenseTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expenseTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expenseTypeComboActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JTable expenseTable;
    private javax.swing.JComboBox expenseTypeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JLabel totalAmount;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
